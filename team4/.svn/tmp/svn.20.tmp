package service;

import java.awt.Menu;
import java.util.ArrayList;
import java.util.List;


import main.KioskMain;
import util.Utils;
import vo.ProductVO;

public class Cart {
	
	private static Cart cartB = new Cart();
	private Cart() {}
	public static Cart getInstance() {
		return cartB;
	}
	//합계 , 몇개선택했는지 , 뭐 선택했는지 리스트 
	ProductService productService = ProductServiceImpl.getInstance();
	List<ProductVO> productList = productService.getListInstance();
	List<ProductVO> cart = new ArrayList<ProductVO>();
//	ProductServiceImpl products = new ProductServiceImpl();
	
	// 장바구니 추가 
	public void proAdd () {
        int code = Utils.nextInt("주문할 메뉴의 주문 코드를 입력해주세요 > ");
		for(int i=0; i<productList.size(); i++) {
			if(productList.get(i).getProNum() == code) {
				cart.add(productService.findBy(code));
				System.out.println(cart+"등록");
			}
		}
	}
	
	public void moreProAdd () {
	
	}
	
	public void totalPrice() {
		
	}
	
	
	// 장바구니 리스트
	public void proList() {
		System.out.println(" === 장바구니 목록 ===");
		cart.forEach(System.out::println); // 음료리스트 보여주는 코드
	
//		int input = products.checkRange(util.Utils.nextInt("1.음료추가  2.음료삭제  3.결제하기"),1,3);
//		switch(input) {
//		case 1: 
//
//			break;
//		case 2:
//			proDelete();
//			break;
//		case 3:
//			
//			break;
//		}
	}
	
	public void proDelete() {
		cart.forEach(System.out::println);
		if(cart.size() == 0) {
			System.out.println(" 삭제를 진행할 상품이 없습니다ㅠ");
			System.out.println();
			return;
		}
		System.out.println();
        int deleteCode = Utils.nextInt("삭제할 메뉴의 주문 코드를 입력해주세요 > ");
        for (int i = 0; i < cart.size(); i++) {
            if(cart.get(i).getProNum() == deleteCode){
                cart.remove(i);
                System.out.println("삭제되었습니다.");
            } 
            else{
            	System.out.println("일치하는 코드가 없습니다");
            }
        }
    }


	
}
