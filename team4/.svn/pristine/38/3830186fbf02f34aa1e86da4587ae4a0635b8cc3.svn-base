package service;

import main.KioskMain;
import util.Utils;
import vo.Administrator;
import vo.ProductVO;
import vo.Member;

public class AdministratorServiceImpl implements AdministratorService {

	private static AdministratorService administratorService = new AdministratorServiceImpl();

	
	private AdministratorServiceImpl() {
	}

	public static AdministratorService getInstance() {
		return administratorService;
	}

	private static Administrator admin = new Administrator();
	


	public static void main(String[] args) {
		AdministratorServiceImpl.getInstance().adminRegis();
	}

	
	public void adminRegis() {
		if(admin.getId() != null) {
			admin();
		}else {
			String ID = Utils.nextLine("관리자 아이디를 입력해주십시오.");
			String PW = Utils.nextLine("관리자 비밀번호를 입력해주십시오.");
			System.out.println("등록되었습니다.");
			admin();
		}
	}
	
	public void admin() {
		String I = Utils.nextLine("관리자 아이디를 입력해 주십시오 :");
		if( I != admin.getId() ) {
			System.out.println("아이디가 잘못되었습니다");
			admin();
		}else {
			String p = Utils.nextLine("관리자 비밀번호를 입력해 주십시오 :");
			if ( PW != admin.getPw()) {
				System.out.println("비밀번호가 잘못되었습니다.");
				admin();
			}
			}
		int input = Utils.nextInt("관리자페이지입니다. 이용하실 항목의 번호를 입력해주세요\n1.매출조회 2.상품등록 3.상품삭제 4.재고조회 5.재고주문 6.회원관리 7.메인화면");
		switch (input) {
		case 1:
			administratorService.findBySal();
			break;
		case 2:
			administratorService.register();
			break;
		case 3:
			administratorService.remove();
			break;
		case 4:
			administratorService.findBySto();
			break;
		case 5:
			administratorService.StoOrd();
			break;
		case 6:
			administratorService.MemberList();
			break;
		case 7:
//			키오스크메인의싱글톤인스턴스.run();
		default:
			break;
		}
	}

	@Override
	public void findBySal() {
		System.out.println("매출조회메서드입니다.");
		System.out.println("총 매출 : " +  admin.getSales());
		int input = Utils.nextInt("상세매출을 조회하시려면 1번, 이전으로 돌아가시려면 2번을 입력해주세요");
		switch (input) {
		case 1:
			administratorService.findByDetSal();
			break;
		case 2:
			admin();
		default:
			break;
		}

	}

	/**
	 * @함준혁 상세 매출 조회
	 */
	public void findByDetSal() {
		// TODO Auto-generated method stub
		System.out.println("상세매출조회메서드입니다.");
		System.out.println("커피 매출 : " + admin.getCofsal());
		System.out.println("티 매출 : " + admin.getTeasal());
		System.out.println("라떼 매출 : " + admin.getLatsal());
		System.out.println("디저트 매출 : " + admin.getDessal());
	}

	public void register() {
//		// TODO Auto-generated method stub
//		int no = as.checkRange(Utils.nextInt("등록하실 제품의 카테고리 번호를 입력해주세요. \n1.커피 2.티 3.라떼 4.디저트 5.etc 6.관리자 홈"), 1, 6);
//		switch (no) {
//		case 1: {
//			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);
//
//			if (findby(proNum) != -1) { 파인드바이되면
//				System.err.println("중복제품번호가 존재합니다.");
//				register();
//			}
//
//			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
//			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
//			pr.proCategory.add(new ProductVO(proNum, proName, proPrice));
//
//			System.out.println("제품이 등록되었습니다.");
//			admin();
//
	}
//		case 2: {
//			int proNum = as.checkRange(Utils.nextInt("200~300 범위 내의 제품번호를 입력해주세요 >"), 100, 200);
//
//			if (findby(proNum) != 0) { findby되어야함
//				System.err.println("중복제품번호가 존재합니다.");
//				register();
//			}
//
//			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
//			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
//			pr.proCategory.add(new ProductVO(proNum, proName, proPrice));
//
//			System.out.println("제품이 등록되었습니다.");
//			admin();
//
//		}
//		case 3: {
//			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);
//
//			if (findby(proNum) != 0) { findby 되게
//				System.err.println("중복제품번호가 존재합니다.");
//				register();
//			}
//
//			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
//			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
//			pr.proCategory.add(new ProductVO(proNum, proName, proPrice));
//
//			System.out.println("제품이 등록되었습니다.");
//			admin();
//
//		}
//		case 4: {
//			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);
//
//			if (findby(proNum) != 0) { findby 되면
//				System.err.println("중복제품번호가 존재합니다.");
//				register();
//			}
//
//			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
//			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
//			pr.proCategory.add(new ProductVO(proNum, proName, proPrice));
//
//			System.out.println("제품이 등록되었습니다.");
//			admin();
//
//		}
//		case 5: {
//			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);
//
//			if (findby(proNum) != 0) {
//				System.err.println("중복제품번호가 존재합니다.");
//				register();
//			}
//
//			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
//			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
//			pr.proCategory.add(new ProductVO(proNum, proName, proPrice));
//
//			System.out.println("제품이 등록되었습니다.");
//			admin();
//		}

//		case 6: {
//			admin();
//		}
//		default:
//			break;
//		}
//
//	}

//	@Override
	public void remove() {
//		System.out.println("제품을 삭제하는메서드입니다.");
//		int no = Utils.nextInt("삭제하실 제품의 제품번호를 입력해주십시오");
//
//		for (int i = 0; i < pr.proCategory.size(); i++) {
//			if (findby(no) != 0) {
//				System.out.println(pr.proCategory.get(i) + "/n 제품이 삭제되었습니다.");
//				pr.proCategory.remove(i);
//				remove();
//			} else {
//				System.out.println("없는제품입니다.");
//				remove();
//			}
//		}
//
	}

	@Override
	public void findBySto() {
		System.out.println("재고를 조회하는 메서드입니다.");
		// TODO Auto-generated method stub

	}

	@Override
	public void StoOrd() {
		System.out.println("재고를 주문하는 메서드입니다. 어떤 재고를 주문하시겠습니까?");
		// TODO Auto-generated method stub

	}

	public int checkRange(int num) {
		return checkRange(num, 0, 100);
	}

	public int checkRange(int num, int start, int end) {
		if (num < start || num > end) {
			throw new util.RangeException(start, end);
		}
		return num;
	}

	@Override

	/**
	 * @함준혁 숫자값 조회하여 상품번호 받는 메서드
	 * @param no
	 * @return 같으면 상품번호 리턴, 다르면 0 리턴
	 */
//	Administrator findby(int no) {
//		for (int i = 0; i < 민수형싱글톤인스턴스.proCategory.size(); i++) {
//			if (pr.proCategory.get(i).getProNum() == no) {
//				return pr.proCategory.get(i).getProNum();
//			}
//		}
//		return null;
//	}

	/**
	 * @함준혁 회원관리. 회원조회, 회원삭제
	 */
	public void MemberList() {
//		for(int i = 0; i <  현민씨의싱글톤인스턴스.memberList.size(); i++) {
//		  System.out.println(현민씨의싱글톤인스턴스.memberList.get(i).toString());
////		  System.out.println(pr.proCategory.get(i).toString());  
//		}
//		String a = Utils.nextLine("삭제하실 회원의 전화번호를 입력해주세요.");
//		
//		

//		int input = Utils.nextInt("");
//		switch (input) {
//		case 1: {	
//
//		}
//		default:
//			throw new IllegalArgumentException("Unexpected value: " + input);
//		}

	}

}
