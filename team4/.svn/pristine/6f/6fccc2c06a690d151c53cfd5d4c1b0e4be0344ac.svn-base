package service;

import main.KioskMain;
import student.Student;
import util.Utils;
import vo.Administrator;
import vo.ProductVO;

public class AdministratorServiceImpl implements AdministratorService {

	static AdministratorServiceImpl as = new AdministratorServiceImpl();
	static KioskMain km = new KioskMain();
	static Administrator ad = new Administrator();
	static ProductServiceImpl ps = new ProductServiceImpl();

	public static void main(String[] args) {
		as.admin(); //테스트해보기

	}

	public static void admin() {
		int input = as.checkRange(
				Utils.nextInt("관리자페이지입니다. 이용하실 항목의 번호를 입력해주세요\n1.매출조회 2.상품등록 3.상품삭제 4.재고조회 5.재고주문 6.메인화면"), 1, 6);
		switch (input) {
		case 1:
			as.findBySal();
			break;
		case 2:
			as.register();
			break;
		case 3:
			as.remove();
			break;
		case 4:
			as.findBySto();
			break;
		case 5:
			as.StoOrd();
			break;
		case 6:
			km.run();
		default:
			break;
		}
	}

	@Override
	public void findBySal() {
		System.out.println("매출조회메서드입니다.");
		System.out.println("총 매출 : " + ad.getSales());
		int input = as.checkRange(Utils.nextInt("상세매출을 조회하시려면 1번, 이전으로 돌아가시려면 2번을 입력해주세요"), 0, 100);
		switch (input) {
		case 1:
			as.findByDetSal();
			break;
		case 2:
			as.admin();
		default:
			break;
		}
		// TODO Auto-generated method stub

	}

	/**
	 * @함준혁 상세 매출 조회
	 */
	public void findByDetSal() {
		// TODO Auto-generated method stub
		System.out.println("상세매출조회메서드입니다.");
		System.out.println("커피 매출 : " + ad.getCofsal());
		System.out.println("티 매출 : " + ad.getTeasal());
		System.out.println("라떼 매출 : " + ad.getLatsal());
		System.out.println("디저트 매출 : " + ad.getDessal());
	}

	@Override
	public void register() {
		// TODO Auto-generated method stub
		int no = as.checkRange(Utils.nextInt("등록하실 제품의 카테고리 번호를 입력해주세요. \n1.커피 2.티 3.라떼 4.디저트 5.etc 6.관리자 홈"), 1, 5);
		switch (no) {
		case 1: {
			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);

			if (findby(proNum) != -1) {
				System.err.println("중복제품번호가 존재합니다.");
				register();
			}

			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
			ps.coffeeList.add(new ProductVO(proNum, proName, proPrice));

			System.out.println("제품이 등록되었습니다.");
			admin();

		}
		case 2: {
			int proNum = as.checkRange(Utils.nextInt("200~300 범위 내의 제품번호를 입력해주세요 >"), 100, 200);

			if (findby(proNum) != 0) {
				System.err.println("중복제품번호가 존재합니다.");
				register();
			}

			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
			ps.coffeeList.add(new ProductVO(proNum, proName, proPrice));

			System.out.println("제품이 등록되었습니다.");
			admin();

		}
		case 3: {
			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);

			if (findby(proNum) != 0) {
				System.err.println("중복제품번호가 존재합니다.");
				register();
			}

			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
			ps.coffeeList.add(new ProductVO(proNum, proName, proPrice));

			System.out.println("제품이 등록되었습니다.");
			admin();

		}
		case 4: {
			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);

			if (findby(proNum) != 0) {
				System.err.println("중복제품번호가 존재합니다.");
				register();
			}

			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
			ps.coffeeList.add(new ProductVO(proNum, proName, proPrice));

			System.out.println("제품이 등록되었습니다.");
			admin();

		}
		case 5: {
			int proNum = as.checkRange(Utils.nextInt("100~200 범위 내의 제품번호를 입력해주세요 >"), 100, 200);

			if (findby(proNum) != 0) {
				System.err.println("중복제품번호가 존재합니다.");
				register();
			}

			String proName = Utils.nextLine("제품의 이름을 입력하세요. >");
			int proPrice = Utils.nextInt("제품의 가격을 입력하세요. >");
			ps.coffeeList.add(new ProductVO(proNum, proName, proPrice));

			System.out.println("제품이 등록되었습니다.");
			admin();
		}

		case 6: {
			admin();
		}
		default:
			break;
		}

	}

	@Override
	public void remove() {
		System.out.println("제품을 삭제하는메서드입니다.");
		int no = Utils.nextInt("삭제하실 제품의 제품번호를 입력해주십시오");

		for (int i = 0; i < ps.coffeeList.size(); i++) {
			if (findby(no) != -1) {
				System.out.println(ps.coffeeList.get(i) + "/n 제품이 삭제되었습니다.");
				ps.coffeeList.remove(i);
				remove();
			} else {
				System.out.println("없는제품입니다.");
				remove();
			}
		}

	}

	@Override
	public void findBySto() {
		System.out.println("재고를 조회하는 메서드입니다.");
		// TODO Auto-generated method stub

	}

	@Override
	public void StoOrd() {
		System.out.println("재고를 주문하는 메서드입니다. 어떤 재고를 주문하시겠습니까?");
		// TODO Auto-generated method stub

	}

	public int checkRange(int num) {
		return checkRange(num, 0, 100);
	}

	public int checkRange(int num, int start, int end) {
		if (num < start || num > end) {
			throw new util.RangeException(start, end);
		}
		return num;
	}

	public int findby(int no) {
		for (int i = 0; i < ps.coffeeList.size(); i++) {
			if (ps.coffeeList.get(i).getProNum() == no) {
				return ps.coffeeList.get(i).getProNum();
			}
		}
		return -1;
	}

	@Override
	public void MemberList() {

	}
}
